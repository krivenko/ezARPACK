language: cpp
os: linux
dist: bionic
cache: bundler

branches:
  only:
    - master
    - travis

jobs:
  include:
  - compiler: clang
    addons:
      apt:
        packages:
        - libopenblas-dev
        - libboost-dev
        - libeigen3-dev
        - libarmadillo-dev
        - libboost-all-dev
        - libgfortran3
        - gfortran
        # TRIQS dependencies
        - libgmp-dev
        - openmpi-bin
        - openmpi-common
        - openmpi-doc
        - libopenmpi-dev
        - libblas-dev
        - liblapack-dev
        - libfftw3-dev
        - libgmp-dev
        - hdf5-tools
        - libhdf5-serial-dev
        - python3-dev
        - python3-pip
        - python3-h5py
        - python3-numpy
        - python3-scipy
        - python3-matplotlib
        - python3-mpi4py
        - python3-mako
        # For documentation
        - doxygen
        - libjs-mathjax
  - compiler: gcc
    addons:
      apt:
        sources:
        - sourceline: 'ppa:ubuntu-toolchain-r/test'
        packages:
        - g++-7
        - gfortran-7
        - libopenblas-dev
        - libboost-dev
        - libeigen3-dev
        - libarmadillo-dev
        # TRIQS dependencies
        - libgmp-dev
        - openmpi-bin
        - openmpi-common
        - openmpi-doc
        - libopenmpi-dev
        - libblas-dev
        - liblapack-dev
        - libfftw3-dev
        - libgmp-dev
        - hdf5-tools
        - libhdf5-serial-dev
        - python3-dev
        - python3-h5py
        - python3-numpy
        - python3-scipy
        - python3-matplotlib
        - python3-mpi4py
        - python3-mako
    before_install:
      - |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-7                               \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-7

before_script:
  # Stop on first error
  - set -e

  # Force CLang to use libc++
  - |
    if [[ "${CXX}" == "clang++" ]]; then
      CMAKE_CXX_FLAGS="-stdlib=libc++ -D_LIBCPP_ENABLE_CXX17_REMOVED_AUTO_PTR";
      export LD_LIBRARY_PATH=/usr/local/clang-7.0.0/lib:$LD_LIBRARY_PATH;
    fi

  # Conditionally build documentation
  - |
    if [[ "${CXX}" == "clang++" ]]; then
      export DOCS=ON
      # Install Sphinx and Breathe for documentation
      pip3 install -U sphinx breathe
    else
      export DOCS=OFF
    fi

  - cd $TRAVIS_BUILD_DIR/..

  # Build and install ARPACK-NG
  - git clone https://github.com/opencollab/arpack-ng.git arpack-ng
  - mkdir arpack-ng.installed
  - pushd arpack-ng
  - |
    cmake .                                                         \
    -DCMAKE_BUILD_TYPE=Release                                      \
    -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../arpack-ng.installed \
    -DBUILD_SHARED_LIBS=ON
  - make -j3
  - make test
  - make install
  - popd

  # Download and install Blaze
  - git clone https://bitbucket.org/blaze-lib/blaze.git blaze
  - mkdir blaze.installed
  - pushd blaze
  - |
    cmake .                                                         \
    -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../blaze.installed     \
    -DBLAZE_SHARED_MEMORY_PARALLELIZATION=OFF
  - make install
  - popd

  # Build and install TRIQS
  - git clone https://github.com/TRIQS/triqs.git triqs.git
  - pushd triqs.git && git checkout 3.0.x && popd
  - mkdir triqs.build && pushd triqs.build
  - |
    cmake ../triqs.git                                              \
    -DCMAKE_BUILD_TYPE=Release                                      \
    -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../triqs.installed     \
    -DCMAKE_CXX_COMPILER=${CXX}                                     \
    -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"                          \
    -DBuild_Documentation=OFF                                       \
    -DBuild_Tests=OFF
  - make -j3 install
  - popd
  - source $TRAVIS_BUILD_DIR/../triqs.installed/share/triqsvars.sh

  # Install xtl, xtensor and xtensor-blas
  - git clone https://github.com/xtensor-stack/xtl.git xtl.git
  - pushd xtl.git
  - cmake . -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../xtensor.installed
  - make install
  - popd
  - git clone https://github.com/xtensor-stack/xtensor.git xtensor.git
  - mkdir xtensor.build && pushd xtensor.build
  - |
    cmake ../xtensor.git                                            \
    -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../xtensor.installed   \
    -Dxtl_DIR=$TRAVIS_BUILD_DIR/../xtensor.installed
  - make install
  - popd
  - git clone https://github.com/xtensor-stack/xtensor-blas.git xtensor-blas.git
  - mkdir xtensor-blas.build && pushd xtensor-blas.build
  - |
    cmake ../xtensor-blas.git                                       \
    -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../xtensor.installed   \
    -Dxtensor_DIR=$TRAVIS_BUILD_DIR/../xtensor.installed
  - make install
  - popd

script:
  # Build ezARPACK
  - mkdir ezARPACK.installed
  - mkdir ezARPACK.build && pushd ezARPACK.build
  - |
    cmake ../ezARPACK                                               \
    -DCMAKE_BUILD_TYPE=Release                                      \
    -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/../ezARPACK.installed  \
    -DARPACK_NG_ROOT=$TRAVIS_BUILD_DIR/../arpack-ng.installed       \
    -Dblaze_ROOT=$TRAVIS_BUILD_DIR/../blaze.installed               \
    -DTRIQS_ROOT=$TRAVIS_BUILD_DIR/../triqs.installed               \
    -Dxtensor_ROOT=$TRAVIS_BUILD_DIR/../xtensor.installed           \
    -Dxtensor-blas_ROOT=$TRAVIS_BUILD_DIR/../xtensor.installed      \
    -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -Wno-ignored-attributes"  \
    -DDocumentation=${DOCS}                                         \
    -DMathJax_ROOT=/usr/share/javascript/mathjax
  - make -j3
  - make test
  - make install
  - popd
  # Prepare documentation for deployment
  - |
    if [[ "${CXX}" == "clang++" ]]; then
      pushd ezARPACK.installed/share/doc/ezARPACK/sphinx
      find . -name "*.html" -type f -exec sed -i                               \
        's/\/usr\/share\/javascript\/mathjax/\/ezARPACK\/mathjax/g' {} \;
      cp -r /usr/share/javascript/mathjax mathjax
      touch .nojekyll
      popd
    fi

deploy:
  # Publish documentation
  provider: pages
  cleanup: false
  token: $GITHUB_TOKEN
  keep_history: true
  local_dir: $TRAVIS_BUILD_DIR/../ezARPACK.installed/share/doc/ezARPACK/sphinx
  on:
    branch: master
    condition: "$CC = clang"
